openapi: 3.0.3
info:
  title: app-mrashid-api
  version: 1.0.0
  description: REST API for app.mrashid.net
paths:
  /api/v1/auth/facebook/:
    post:
      operationId: api_v1_auth_facebook_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/v1/auth/google/:
    post:
      operationId: api_v1_auth_google_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: api_v1_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/change/:
    post:
      operationId: api_v1_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/reset/:
    post:
      operationId: api_v1_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: api_v1_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/:
    post:
      operationId: api_v1_auth_registration_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/v1/auth/registration/resend-email/:
    post:
      operationId: api_v1_auth_registration_resend_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/verify-email/:
    post:
      operationId: api_v1_auth_registration_verify_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: api_v1_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/token/verify/:
    post:
      operationId: api_v1_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/auth/user/:
    get:
      operationId: api_v1_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    put:
      operationId: api_v1_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    patch:
      operationId: api_v1_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetails'
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
  /api/v1/note/:
    get:
      operationId: api_v1_note_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: internal
        schema:
          type: boolean
      - in: query
        name: priority
        schema:
          type: integer
          title: Note Priority
          enum:
          - 1
          - 2
          - 3
          - 4
      - in: query
        name: student
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoteList'
          description: ''
    post:
      operationId: api_v1_note_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteCreate'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreate'
          description: ''
  /api/v1/note/{id}/:
    get:
      operationId: api_v1_note_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreate'
          description: ''
    put:
      operationId: api_v1_note_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteCreate'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreate'
          description: ''
    patch:
      operationId: api_v1_note_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNoteCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNoteCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNoteCreate'
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreate'
          description: ''
    delete:
      operationId: api_v1_note_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/note_category/:
    get:
      operationId: api_v1_note_category_list
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoteCategory'
          description: ''
    post:
      operationId: api_v1_note_category_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteCategory'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCategory'
          description: ''
  /api/v1/note_category/{id}/:
    get:
      operationId: api_v1_note_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note Category.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCategory'
          description: ''
    put:
      operationId: api_v1_note_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note Category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteCategory'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCategory'
          description: ''
    patch:
      operationId: api_v1_note_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note Category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNoteCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNoteCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNoteCategory'
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCategory'
          description: ''
    delete:
      operationId: api_v1_note_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note Category.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/send_email/:
    post:
      operationId: api_v1_send_email_create
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/student_data/:
    get:
      operationId: api_v1_student_data_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentDataListList'
          description: ''
    post:
      operationId: api_v1_student_data_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDataRetrieve'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDataRetrieve'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDataRetrieve'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDataRetrieve'
          description: ''
  /api/v1/student_data/{id}/:
    get:
      operationId: api_v1_student_data_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Data.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDataRetrieve'
          description: ''
    put:
      operationId: api_v1_student_data_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Data.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDataRetrieve'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDataRetrieve'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDataRetrieve'
        required: true
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDataRetrieve'
          description: ''
    patch:
      operationId: api_v1_student_data_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Data.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentDataRetrieve'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentDataRetrieve'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentDataRetrieve'
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDataRetrieve'
          description: ''
    delete:
      operationId: api_v1_student_data_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Data.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
        jwtCookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AccountTypeEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
    CustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email Address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        account_type:
          allOf:
          - $ref: '#/components/schemas/AccountTypeEnum'
          minimum: 0
          maximum: 32767
        profile_pic:
          type: string
          format: uri
        student_id:
          type: integer
          nullable: true
          readOnly: true
      required:
      - email
      - pk
      - profile_pic
      - student_id
      - username
    EnglishProficiencyEnum:
      enum:
      - ielts
      - toefl
      - duolingo
      - no-test
      - moi
      - plan-to
      type: string
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        user:
          $ref: '#/components/schemas/CustomUserDetails'
      required:
      - access_token
      - refresh_token
      - user
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    NoteCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    NoteCreate:
      type: object
      properties:
        student:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        category:
          type: integer
        internal:
          type: boolean
          title: Internal Note?
        complete:
          type: boolean
          title: Complete?
        date_modified:
          type: string
          format: date-time
          readOnly: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          title: Note Priority
          minimum: 0
          maximum: 32767
        date_added:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          nullable: true
      required:
      - category
      - date_added
      - date_modified
      - student
      - title
    NoteList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/NoteCategory'
        created_by:
          allOf:
          - $ref: '#/components/schemas/CustomUserDetails'
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        date_added:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        internal:
          type: boolean
          title: Internal Note?
        complete:
          type: boolean
          title: Complete?
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          title: Note Priority
          minimum: 0
          maximum: 32767
        student:
          type: integer
      required:
      - category
      - created_by
      - date_added
      - date_modified
      - id
      - student
      - title
    PaginatedStudentDataListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentDataList'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedCustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email Address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        account_type:
          allOf:
          - $ref: '#/components/schemas/AccountTypeEnum'
          minimum: 0
          maximum: 32767
        profile_pic:
          type: string
          format: uri
        student_id:
          type: integer
          nullable: true
          readOnly: true
    PatchedNoteCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedNoteCreate:
      type: object
      properties:
        student:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        category:
          type: integer
        internal:
          type: boolean
          title: Internal Note?
        complete:
          type: boolean
          title: Complete?
        date_modified:
          type: string
          format: date-time
          readOnly: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          title: Note Priority
          minimum: 0
          maximum: 32767
        date_added:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          nullable: true
    PatchedStudentDataRetrieve:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          title: Created at
        destination:
          type: string
          maxLength: 255
        degree:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        phone:
          type: string
          maxLength: 255
        social_media:
          type: string
          nullable: true
          maxLength: 255
        major:
          type: string
          maxLength: 255
        education:
          type: object
          additionalProperties: {}
        english_proficiency:
          $ref: '#/components/schemas/EnglishProficiencyEnum'
        english_proficiency_score:
          type: string
          nullable: true
          title: Score
          maxLength: 255
        message:
          type: string
          nullable: true
        dr_rashids_notes:
          type: string
          nullable: true
          title: Dr. Rashid's Notes
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: 0
          maximum: 32767
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: 0
          maximum: 32767
    PriorityEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
    Registration:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
      required:
      - email
      - first_name
      - last_name
      - password1
      - password2
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    StatusEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
    StudentDataList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        username:
          type: string
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        destination:
          type: string
          maxLength: 255
        degree:
          type: string
          maxLength: 255
        major:
          type: string
          maxLength: 255
        english_proficiency:
          $ref: '#/components/schemas/EnglishProficiencyEnum'
        created:
          type: string
          format: date-time
          title: Created at
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: 0
          maximum: 32767
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: 0
          maximum: 32767
      required:
      - degree
      - destination
      - email
      - first_name
      - id
      - last_name
      - major
      - username
    StudentDataRetrieve:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          title: Created at
        destination:
          type: string
          maxLength: 255
        degree:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        phone:
          type: string
          maxLength: 255
        social_media:
          type: string
          nullable: true
          maxLength: 255
        major:
          type: string
          maxLength: 255
        education:
          type: object
          additionalProperties: {}
        english_proficiency:
          $ref: '#/components/schemas/EnglishProficiencyEnum'
        english_proficiency_score:
          type: string
          nullable: true
          title: Score
          maxLength: 255
        message:
          type: string
          nullable: true
        dr_rashids_notes:
          type: string
          nullable: true
          title: Dr. Rashid's Notes
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: 0
          maximum: 32767
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: 0
          maximum: 32767
      required:
      - degree
      - destination
      - education
      - email
      - first_name
      - id
      - last_name
      - major
      - phone
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: access
    jwtHeaderAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
