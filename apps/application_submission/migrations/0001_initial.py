# Generated by Django 4.0.1 on 2022-03-27 07:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student_data', '0008_historicalstudentdata_middle_initials_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PreApplicationForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('middle_initials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Middle Initials')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=255, verbose_name='Phone')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, max_length=100, null=True, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Marital Status')),
                ('address_line_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip Code')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('perma_address_line_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('perma_address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('perma_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('perma_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('perma_zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip Code')),
                ('perma_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('passport_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Passport Number')),
                ('passport_issue_date', models.DateField(blank=True, null=True, verbose_name='Passport Issue Date')),
                ('passport_expiry_date', models.DateField(blank=True, null=True, verbose_name='Passport Expiry Date')),
                ('passport_issue_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Passport Issue Country')),
                ('city_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='City of Birth')),
                ('country_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country of Birth')),
                ('nationality', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nationality')),
                ('country_of_citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country of Citizenship')),
                ('are_you_citizen_of_more_than_one_country', models.BooleanField(default=False, verbose_name='Are you a citizen of more than one country?')),
                ('names_of_countries_of_citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Names of Countries of Citizenship')),
                ('are_you_living_in_other_country', models.BooleanField(default=False, verbose_name='Are you living and studying in any other country?')),
                ('names_of_countries_living_in', models.CharField(blank=True, max_length=255, null=True, verbose_name='Names of Countries Living in')),
                ('has_applied_for_immigration', models.BooleanField(default=False, verbose_name='Has applicant applied for any type of immigration into any country?')),
                ('has_been_refused_Visa', models.BooleanField(default=False, verbose_name='Has applicant Visa refusal for any country?')),
                ('has_been_convicted', models.BooleanField(default=False, verbose_name='Has applicant ever been convicted of a criminal offence?')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Phone')),
                ('emergency_contact_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Email')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Relationship')),
                ('highest_education_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='Highest Education Level')),
                ('country_of_education', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country of Education')),
                ('grade_10th_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Grade 10th or equivalent')),
                ('grade_12th_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Grade 12th or equivalent')),
                ('undergraduate_degree_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Undergraduate Degree or equivalent')),
                ('graduate_degree_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Graduate Degree or equivalent')),
                ('work_experience', models.JSONField(blank=True, null=True, verbose_name='Work Experience')),
                ('english_proficiency', models.CharField(blank=True, max_length=255, null=True, verbose_name='English Proficiency')),
                ('ielts_waivers', models.BooleanField(default=False, verbose_name='IELTS Waiver?')),
                ('ielts_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('ielts_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Score')),
                ('ielts_listening', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Listening')),
                ('ielts_speaking', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Speaking')),
                ('ielts_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Reading')),
                ('ielts_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Writing')),
                ('ielts_trf_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='IELTS TRF No')),
                ('duolingo_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='DET Score')),
                ('duolingo_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('toefl_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Score')),
                ('toefl_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('toefl_listening', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Listening')),
                ('toefl_speaking', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Speaking')),
                ('toefl_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Reading')),
                ('toefl_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Writing')),
                ('toefl_trf_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='TOEFL TRF No')),
                ('sat_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Score')),
                ('sat_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('sat_ebrw', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT EBRW')),
                ('sat_math', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Math')),
                ('sat_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Reading')),
                ('sat_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Writing')),
                ('act_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Score')),
                ('act_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('act_english', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT English')),
                ('act_math', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Math')),
                ('act_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Reading')),
                ('act_science', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Science')),
                ('act_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Writing')),
                ('has_gap', models.BooleanField(default=False, verbose_name='Has Gap?')),
                ('gap_explanation', models.TextField(blank=True, null=True, verbose_name='Gap Explanation')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pre_app_form', to='student_data.studentdata')),
            ],
            options={
                'verbose_name': 'Pre-Application Form',
                'verbose_name_plural': 'Pre-Application Forms',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPreApplicationForm',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('middle_initials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Middle Initials')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('email', models.EmailField(db_index=True, max_length=255, verbose_name='Email')),
                ('phone', models.CharField(max_length=255, verbose_name='Phone')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, max_length=100, null=True, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Marital Status')),
                ('address_line_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip Code')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('perma_address_line_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('perma_address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('perma_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('perma_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('perma_zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip Code')),
                ('perma_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('passport_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Passport Number')),
                ('passport_issue_date', models.DateField(blank=True, null=True, verbose_name='Passport Issue Date')),
                ('passport_expiry_date', models.DateField(blank=True, null=True, verbose_name='Passport Expiry Date')),
                ('passport_issue_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Passport Issue Country')),
                ('city_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='City of Birth')),
                ('country_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country of Birth')),
                ('nationality', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nationality')),
                ('country_of_citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country of Citizenship')),
                ('are_you_citizen_of_more_than_one_country', models.BooleanField(default=False, verbose_name='Are you a citizen of more than one country?')),
                ('names_of_countries_of_citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Names of Countries of Citizenship')),
                ('are_you_living_in_other_country', models.BooleanField(default=False, verbose_name='Are you living and studying in any other country?')),
                ('names_of_countries_living_in', models.CharField(blank=True, max_length=255, null=True, verbose_name='Names of Countries Living in')),
                ('has_applied_for_immigration', models.BooleanField(default=False, verbose_name='Has applicant applied for any type of immigration into any country?')),
                ('has_been_refused_Visa', models.BooleanField(default=False, verbose_name='Has applicant Visa refusal for any country?')),
                ('has_been_convicted', models.BooleanField(default=False, verbose_name='Has applicant ever been convicted of a criminal offence?')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Phone')),
                ('emergency_contact_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Email')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact Relationship')),
                ('highest_education_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='Highest Education Level')),
                ('country_of_education', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country of Education')),
                ('grade_10th_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Grade 10th or equivalent')),
                ('grade_12th_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Grade 12th or equivalent')),
                ('undergraduate_degree_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Undergraduate Degree or equivalent')),
                ('graduate_degree_or_equivalent', models.JSONField(blank=True, null=True, verbose_name='Graduate Degree or equivalent')),
                ('work_experience', models.JSONField(blank=True, null=True, verbose_name='Work Experience')),
                ('english_proficiency', models.CharField(blank=True, max_length=255, null=True, verbose_name='English Proficiency')),
                ('ielts_waivers', models.BooleanField(default=False, verbose_name='IELTS Waiver?')),
                ('ielts_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('ielts_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Score')),
                ('ielts_listening', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Listening')),
                ('ielts_speaking', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Speaking')),
                ('ielts_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Reading')),
                ('ielts_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='IELTS Writing')),
                ('ielts_trf_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='IELTS TRF No')),
                ('duolingo_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='DET Score')),
                ('duolingo_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('toefl_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Score')),
                ('toefl_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('toefl_listening', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Listening')),
                ('toefl_speaking', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Speaking')),
                ('toefl_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Reading')),
                ('toefl_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='TOEFL Writing')),
                ('toefl_trf_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='TOEFL TRF No')),
                ('sat_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Score')),
                ('sat_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('sat_ebrw', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT EBRW')),
                ('sat_math', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Math')),
                ('sat_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Reading')),
                ('sat_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='SAT Writing')),
                ('act_score', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Score')),
                ('act_date_of_examination', models.DateField(blank=True, null=True, verbose_name='Date of Examination')),
                ('act_english', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT English')),
                ('act_math', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Math')),
                ('act_reading', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Reading')),
                ('act_science', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Science')),
                ('act_writing', models.CharField(blank=True, max_length=5, null=True, verbose_name='ACT Writing')),
                ('has_gap', models.BooleanField(default=False, verbose_name='Has Gap?')),
                ('gap_explanation', models.TextField(blank=True, null=True, verbose_name='Gap Explanation')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='student_data.studentdata')),
            ],
            options={
                'verbose_name': 'historical Pre-Application Form',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
